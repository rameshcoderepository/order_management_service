version: '3.8'

services:
  mysql-db:
    image: mysql:8
    container_name: mysql-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: user_management_db
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # Mount the SQL file (This allows the container to read and use the file without copying it permanently into the containerâ€™s filesystem.)
    command: --init-file /docker-entrypoint-initdb.d/init.sql  # Run SQL script to create multiple DBs
    
  order-service:
    build: ./order-service/order-service
    container_name: order-service
    restart: always
    depends_on:
      - mysql-db
    ports:
      - "8086:8086"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/order_management_db?allowPublicKeyRetrieval=true&useSSL=false
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update

  inventory-service:
    build: ./inventory-service/inventory-service
    container_name: inventory-service
    restart: always
    depends_on:
      - mysql-db
    ports:
      - "8085:8085"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/inventory_management_db?allowPublicKeyRetrieval=true&useSSL=false
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update

  user-service:
    build: ./user-service/user-service
    container_name: user-service
    restart: always
    depends_on:
      - mysql-db
    ports:
      - "8083:8083"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/user_management_db?allowPublicKeyRetrieval=true&useSSL=false
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update

volumes:
  mysql_data:
